(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{247:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return r})),a.d(t,"metadata",(function(){return i})),a.d(t,"rightToc",(function(){return l})),a.d(t,"default",(function(){return b}));var n=a(1),o=a(9),c=(a(0),a(296)),r={id:"_components_onofftogglebutton_onofftogglebutton_types_.ionofftogglebuttonprops",title:"IOnOffToggleButtonProps",sidebar_label:"IOnOffToggleButtonProps"},i={id:"api/react-ocean-forms-bootstrap/interfaces/_components_onofftogglebutton_onofftogglebutton_types_.ionofftogglebuttonprops",title:"IOnOffToggleButtonProps",description:"Props for the OnOffToggleButton component",source:"@site/docs/api/react-ocean-forms-bootstrap/interfaces/_components_onofftogglebutton_onofftogglebutton_types_.ionofftogglebuttonprops.md",permalink:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_onofftogglebutton_onofftogglebutton_types_.ionofftogglebuttonprops",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/api/react-ocean-forms-bootstrap/interfaces/_components_onofftogglebutton_onofftogglebutton_types_.ionofftogglebuttonprops.md",sidebar_label:"IOnOffToggleButtonProps",sidebar:"docs",previous:{title:"IInputProps",permalink:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_input_input_types_.iinputprops"},next:{title:"OnOffToggleButtonChoiceProps",permalink:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_onofftogglebutton_onofftogglebuttonchoice_onofftogglebuttonchoice_types_.onofftogglebuttonchoiceprops"}},l=[{value:"Type parameters",id:"type-parameters",children:[]},{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Properties",id:"properties",children:[{value:"<code>Optional</code> asyncValidateOnChange",id:"optional-asyncvalidateonchange",children:[]},{value:"<code>Optional</code> asyncValidationWait",id:"optional-asyncvalidationwait",children:[]},{value:"<code>Optional</code> asyncValidators",id:"optional-asyncvalidators",children:[]},{value:"<code>Optional</code> containerClass",id:"optional-containerclass",children:[]},{value:"<code>Optional</code> defaultValue",id:"optional-defaultvalue",children:[]},{value:"<code>Optional</code> disabled",id:"optional-disabled",children:[]},{value:"<code>Optional</code> getDisplayValue",id:"optional-getdisplayvalue",children:[]},{value:"<code>Optional</code> getSubmitValue",id:"optional-getsubmitvalue",children:[]},{value:"<code>Optional</code> info",id:"optional-info",children:[]},{value:"<code>Optional</code> inputSize",id:"optional-inputsize",children:[]},{value:"label",id:"label",children:[]},{value:"<code>Optional</code> labelClass",id:"optional-labelclass",children:[]},{value:"<code>Optional</code> labelSize",id:"optional-labelsize",children:[]},{value:"name",id:"name",children:[]},{value:"<code>Optional</code> offLabel",id:"optional-offlabel",children:[]},{value:"<code>Optional</code> onLabel",id:"optional-onlabel",children:[]},{value:"<code>Optional</code> plaintext",id:"optional-plaintext",children:[]},{value:"<code>Optional</code> prefix",id:"optional-prefix",children:[]},{value:"<code>Optional</code> suffix",id:"optional-suffix",children:[]},{value:"<code>Optional</code> validators",id:"optional-validators",children:[]},{value:"<code>Optional</code> value",id:"optional-value",children:[]}]},{value:"Methods",id:"methods",children:[{value:"<code>Optional</code> onBlur",id:"optional-onblur",children:[]},{value:"<code>Optional</code> onChange",id:"optional-onchange",children:[]}]}],p={rightToc:l};function b(e){var t=e.components,a=Object(o.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"Props for the OnOffToggleButton component"),Object(c.b)("h2",{id:"type-parameters"},"Type parameters"),Object(c.b)("p",null,"\u25aa ",Object(c.b)("strong",{parentName:"p"},"TSubmitValue")),Object(c.b)("h2",{id:"hierarchy"},"Hierarchy"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},"IUseFieldProps\u2039boolean, TSubmitValue\u203a"),Object(c.b)("p",{parentName:"li"},"\u21b3 ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_fieldline_fieldline_types_.ibasefieldlineprops"}),"IBaseFieldLineProps")),Object(c.b)("p",{parentName:"li"},"\u21b3 ",Object(c.b)("strong",{parentName:"p"},"IOnOffToggleButtonProps")))),Object(c.b)("h2",{id:"properties"},"Properties"),Object(c.b)("h3",{id:"optional-asyncvalidateonchange"},Object(c.b)("inlineCode",{parentName:"h3"},"Optional")," asyncValidateOnChange"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("strong",{parentName:"p"},"asyncValidateOnChange"),"? : ",Object(c.b)("em",{parentName:"p"},"undefined | false | true")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_check_check_types_.icheckprops"}),"ICheckProps"),".",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_check_check_types_.icheckprops#optional-asyncvalidateonchange"}),"asyncValidateOnChange"))),Object(c.b)("p",null,"If set to true the form will trigger asynchronous validation on this field whenever\nit changes (e.g. on key press). Default behaviour is that the fields will only async\nvalidate when they loose focus."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"default"))," Form.asyncValidateOnChange"),Object(c.b)("hr",null),Object(c.b)("h3",{id:"optional-asyncvalidationwait"},Object(c.b)("inlineCode",{parentName:"h3"},"Optional")," asyncValidationWait"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("strong",{parentName:"p"},"asyncValidationWait"),"? : ",Object(c.b)("em",{parentName:"p"},"undefined | number")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_check_check_types_.icheckprops"}),"ICheckProps"),".",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_check_check_types_.icheckprops#optional-asyncvalidationwait"}),"asyncValidationWait"))),Object(c.b)("p",null,"Wait time in ms that should pass after\nthe last user input before the async\nvalidators will be triggered"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"default"))," Form.asyncValidationWait"),Object(c.b)("hr",null),Object(c.b)("h3",{id:"optional-asyncvalidators"},Object(c.b)("inlineCode",{parentName:"h3"},"Optional")," asyncValidators"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("strong",{parentName:"p"},"asyncValidators"),"? : ",Object(c.b)("em",{parentName:"p"},"TAsyncValidator\u2039TSubmitValue\u203a[]")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_check_check_types_.icheckprops"}),"ICheckProps"),".",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_check_check_types_.icheckprops#optional-asyncvalidators"}),"asyncValidators"))),Object(c.b)("p",null,"Contains an array of functions that must return a Promise. Those functions are called by default onBlur,\nhowever this behaviour can be changed by setting asyncValidateOnChange on the Form. The Form will call\nall async validators of a Field at the same time and will wait for the result of every one of them. If\none of them returns a string the field will be marked as invalid. Per default the form will wait for 400ms\nbefore triggering any validation. This is put in place so the validation won't get triggered on every\nkeystroke of the user. The async validators will be called 400ms after the last value change."),Object(c.b)("hr",null),Object(c.b)("h3",{id:"optional-containerclass"},Object(c.b)("inlineCode",{parentName:"h3"},"Optional")," containerClass"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("strong",{parentName:"p"},"containerClass"),"? : ",Object(c.b)("em",{parentName:"p"},"undefined | string")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_fieldline_fieldline_types_.ibasefieldlineprops"}),"IBaseFieldLineProps"),".",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_fieldline_fieldline_types_.ibasefieldlineprops#optional-containerclass"}),"containerClass"))),Object(c.b)("p",null,"CssClass for the field line container"),Object(c.b)("hr",null),Object(c.b)("h3",{id:"optional-defaultvalue"},Object(c.b)("inlineCode",{parentName:"h3"},"Optional")," defaultValue"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("strong",{parentName:"p"},"defaultValue"),"? : ",Object(c.b)("em",{parentName:"p"},"TSubmitValue")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_check_check_types_.icheckprops"}),"ICheckProps"),".",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_check_check_types_.icheckprops#optional-defaultvalue"}),"defaultValue"))),Object(c.b)("p",null,"Overwrites the Form default values for this field. This value will be\nused during form initialization."),Object(c.b)("hr",null),Object(c.b)("h3",{id:"optional-disabled"},Object(c.b)("inlineCode",{parentName:"h3"},"Optional")," disabled"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("strong",{parentName:"p"},"disabled"),"? : ",Object(c.b)("em",{parentName:"p"},"undefined | false | true")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_check_check_types_.icheckprops"}),"ICheckProps"),".",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_check_check_types_.icheckprops#optional-disabled"}),"disabled"))),Object(c.b)("p",null,"Overwrites the disabled state for this field."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"default"))," Form.disabled"),Object(c.b)("hr",null),Object(c.b)("h3",{id:"optional-getdisplayvalue"},Object(c.b)("inlineCode",{parentName:"h3"},"Optional")," getDisplayValue"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("strong",{parentName:"p"},"getDisplayValue"),"? : ",Object(c.b)("em",{parentName:"p"},"TValueCallback\u2039TSubmitValue, boolean\u203a")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_check_check_types_.icheckprops"}),"ICheckProps"),".",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_check_check_types_.icheckprops#optional-getdisplayvalue"}),"getDisplayValue"))),Object(c.b)("p",null,"Called, when the field is loading its value from the forms\ndefault values. Must return the value to display."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"param"))," Contains the current field value."),Object(c.b)("br",null),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"param"))," Contains the properties disabled and plaintext, representing the current Form setup."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"returns:"))," the function should return the value that should be displayed."),Object(c.b)("hr",null),Object(c.b)("h3",{id:"optional-getsubmitvalue"},Object(c.b)("inlineCode",{parentName:"h3"},"Optional")," getSubmitValue"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("strong",{parentName:"p"},"getSubmitValue"),"? : ",Object(c.b)("em",{parentName:"p"},"TValueCallback\u2039boolean, TSubmitValue\u203a")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_check_check_types_.icheckprops"}),"ICheckProps"),".",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_check_check_types_.icheckprops#optional-getsubmitvalue"}),"getSubmitValue"))),Object(c.b)("p",null,"Called, when the field is submitting its value to the form.\nMust return the value to submit."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"param"))," Contains the current field value."),Object(c.b)("br",null),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"param"))," Contains the properties disabled and plaintext, representing the current Form setup."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"returns:"))," the function should return the value that should be submitted."),Object(c.b)("hr",null),Object(c.b)("h3",{id:"optional-info"},Object(c.b)("inlineCode",{parentName:"h3"},"Optional")," info"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("strong",{parentName:"p"},"info"),"? : ",Object(c.b)("em",{parentName:"p"},"undefined | string")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_fieldline_fieldline_types_.iinfoprops"}),"IInfoProps"),".",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_fieldline_fieldline_types_.iinfoprops#optional-info"}),"info"))),Object(c.b)("p",null,"Info text"),Object(c.b)("hr",null),Object(c.b)("h3",{id:"optional-inputsize"},Object(c.b)("inlineCode",{parentName:"h3"},"Optional")," inputSize"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("strong",{parentName:"p"},"inputSize"),"? : ",Object(c.b)("em",{parentName:"p"},"undefined | string")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_fieldline_fieldline_types_.ibasefieldlineprops"}),"IBaseFieldLineProps"),".",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_fieldline_fieldline_types_.ibasefieldlineprops#optional-inputsize"}),"inputSize"))),Object(c.b)("p",null,"Input size for the bootstrap input column"),Object(c.b)("hr",null),Object(c.b)("h3",{id:"label"},"label"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("strong",{parentName:"p"},"label"),": ",Object(c.b)("em",{parentName:"p"},"string")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_check_check_types_.icheckprops"}),"ICheckProps"),".",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_check_check_types_.icheckprops#label"}),"label"))),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Overrides void")),Object(c.b)("p",null,"Message id of the label that will be displayed along the input. If you\ndon't want to use any i18n features you can pass a raw message instead."),Object(c.b)("hr",null),Object(c.b)("h3",{id:"optional-labelclass"},Object(c.b)("inlineCode",{parentName:"h3"},"Optional")," labelClass"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("strong",{parentName:"p"},"labelClass"),"? : ",Object(c.b)("em",{parentName:"p"},"undefined | string")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_fieldline_fieldline_types_.ibasefieldlineprops"}),"IBaseFieldLineProps"),".",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_fieldline_fieldline_types_.ibasefieldlineprops#optional-labelclass"}),"labelClass"))),Object(c.b)("p",null,"CssClass for the label column"),Object(c.b)("hr",null),Object(c.b)("h3",{id:"optional-labelsize"},Object(c.b)("inlineCode",{parentName:"h3"},"Optional")," labelSize"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("strong",{parentName:"p"},"labelSize"),"? : ",Object(c.b)("em",{parentName:"p"},"undefined | string")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_fieldline_fieldline_types_.ibasefieldlineprops"}),"IBaseFieldLineProps"),".",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_fieldline_fieldline_types_.ibasefieldlineprops#optional-labelsize"}),"labelSize"))),Object(c.b)("p",null,"Label size for the bootstrap label column"),Object(c.b)("hr",null),Object(c.b)("h3",{id:"name"},"name"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("strong",{parentName:"p"},"name"),": ",Object(c.b)("em",{parentName:"p"},"string")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_check_check_types_.icheckprops"}),"ICheckProps"),".",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_check_check_types_.icheckprops#name"}),"name"))),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Overrides void")),Object(c.b)("p",null,"Name of this input. Will be used as the unique identifier of this value.\n",Object(c.b)("strong",{parentName:"p"},"Must be unique inside its context (e.g. form wide or form group wide)!")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"optional-offlabel"},Object(c.b)("inlineCode",{parentName:"h3"},"Optional")," offLabel"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("strong",{parentName:"p"},"offLabel"),"? : ",Object(c.b)("em",{parentName:"p"},"undefined | string")),Object(c.b)("p",null,"Label for the off-button"),Object(c.b)("hr",null),Object(c.b)("h3",{id:"optional-onlabel"},Object(c.b)("inlineCode",{parentName:"h3"},"Optional")," onLabel"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("strong",{parentName:"p"},"onLabel"),"? : ",Object(c.b)("em",{parentName:"p"},"undefined | string")),Object(c.b)("p",null,"Label for the on-button"),Object(c.b)("hr",null),Object(c.b)("h3",{id:"optional-plaintext"},Object(c.b)("inlineCode",{parentName:"h3"},"Optional")," plaintext"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("strong",{parentName:"p"},"plaintext"),"? : ",Object(c.b)("em",{parentName:"p"},"undefined | false | true")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_check_check_types_.icheckprops"}),"ICheckProps"),".",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_check_check_types_.icheckprops#optional-plaintext"}),"plaintext"))),Object(c.b)("p",null,"Overwrites the plaintext state for this field."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"default"))," Form.plaintext"),Object(c.b)("hr",null),Object(c.b)("h3",{id:"optional-prefix"},Object(c.b)("inlineCode",{parentName:"h3"},"Optional")," prefix"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("strong",{parentName:"p"},"prefix"),"? : ",Object(c.b)("em",{parentName:"p"},"React.ReactNode")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_fieldline_fieldline_types_.ibasefieldlineprops"}),"IBaseFieldLineProps"),".",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_fieldline_fieldline_types_.ibasefieldlineprops#optional-prefix"}),"prefix"))),Object(c.b)("p",null,"Prefix component"),Object(c.b)("hr",null),Object(c.b)("h3",{id:"optional-suffix"},Object(c.b)("inlineCode",{parentName:"h3"},"Optional")," suffix"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("strong",{parentName:"p"},"suffix"),"? : ",Object(c.b)("em",{parentName:"p"},"React.ReactNode")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_fieldline_fieldline_types_.ibasefieldlineprops"}),"IBaseFieldLineProps"),".",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_fieldline_fieldline_types_.ibasefieldlineprops#optional-suffix"}),"suffix"))),Object(c.b)("p",null,"Suffix component"),Object(c.b)("hr",null),Object(c.b)("h3",{id:"optional-validators"},Object(c.b)("inlineCode",{parentName:"h3"},"Optional")," validators"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("strong",{parentName:"p"},"validators"),"? : ",Object(c.b)("em",{parentName:"p"},"TValidator\u2039TSubmitValue\u203a[]")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_check_check_types_.icheckprops"}),"ICheckProps"),".",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_check_check_types_.icheckprops#optional-validators"}),"validators"))),Object(c.b)("p",null,"Contains an array of functions that will validate this input. Those functions are called whenever\nthe value changes (on keypress, ...). They are called in order and whenever one fails the other ones\nare not called. The validator function must return either undefined or a string containing the message\nid of the validation error text."),Object(c.b)("hr",null),Object(c.b)("h3",{id:"optional-value"},Object(c.b)("inlineCode",{parentName:"h3"},"Optional")," value"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("strong",{parentName:"p"},"value"),"? : ",Object(c.b)("em",{parentName:"p"},"TSubmitValue")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_check_check_types_.icheckprops"}),"ICheckProps"),".",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_check_check_types_.icheckprops#optional-value"}),"value"))),Object(c.b)("p",null,"Overwrites the Form value for this field. Changing this property will\nupdate the Field value, overwriting its default value but also any\nvalue the user put in."),Object(c.b)("h2",{id:"methods"},"Methods"),Object(c.b)("h3",{id:"optional-onblur"},Object(c.b)("inlineCode",{parentName:"h3"},"Optional")," onBlur"),Object(c.b)("p",null,"\u25b8 ",Object(c.b)("strong",{parentName:"p"},"onBlur"),"(): ",Object(c.b)("em",{parentName:"p"},"void")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_check_check_types_.icheckprops"}),"ICheckProps"),".",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_check_check_types_.icheckprops#optional-onblur"}),"onBlur"))),Object(c.b)("p",null,"Triggered on field blur."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," ",Object(c.b)("em",{parentName:"p"},"void")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"optional-onchange"},Object(c.b)("inlineCode",{parentName:"h3"},"Optional")," onChange"),Object(c.b)("p",null,"\u25b8 ",Object(c.b)("strong",{parentName:"p"},"onChange"),"(",Object(c.b)("inlineCode",{parentName:"p"},"value"),": TSubmitValue | undefined): ",Object(c.b)("em",{parentName:"p"},"void")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_check_check_types_.icheckprops"}),"ICheckProps"),".",Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/react-ocean-forms/docs/api/react-ocean-forms-bootstrap/interfaces/_components_check_check_types_.icheckprops#optional-onchange"}),"onChange"))),Object(c.b)("p",null,"Triggered on field value change."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Parameters:")),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"value")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"TSubmitValue ","|"," undefined"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Current field value")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," ",Object(c.b)("em",{parentName:"p"},"void")))}b.isMDXComponent=!0},296:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return f}));var n=a(0),o=a.n(n);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},c=Object.keys(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var p=o.a.createContext({}),b=function(e){var t=o.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i({},t,{},e)),a},s=function(e){var t=b(e.components);return o.a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,r=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=b(a),d=n,f=s["".concat(r,".").concat(d)]||s[d]||m[d]||c;return a?o.a.createElement(f,i({ref:t},p,{components:a})):o.a.createElement(f,i({ref:t},p))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,r=new Array(c);r[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,r[1]=i;for(var p=2;p<c;p++)r[p]=a[p];return o.a.createElement.apply(null,r)}return o.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);